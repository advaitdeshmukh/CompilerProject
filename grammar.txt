<program> -> <moduleDeclarations> <otherModules> <driverModule> <otherModules> 
<moduleDeclarations> -> <moduleDeclaration> <moduleDeclarations> 
<moduleDeclarations> -> eps 
<moduleDeclaration> -> DECLARE MODULE ID SEMICOL 
<otherModules> -> <module> <otherModules> 
<otherModules> -> eps 
<driverModule> -> DRIVERDEF DRIVER PROGRAM DRIVERENDDEF <moduleDef> 
<moduleDef> -> START <statements> END 
<module> -> DEF MODULE ID ENDDEF TAKES INPUT SQBO <input_plist> SQBC SEMICOL <ret> <moduleDef> 
<ret> -> RETURNS SQBO <output_plist> SQBC SEMICOL 
<ret> -> eps 
<input_plist> -> ID COLON <dataType> <N1> 
<N1> -> COMMA ID COLON <dataType> <N1> 
<N1> -> eps 
<output_plist> -> ID COLON <type> <N2> 
<N2> -> COMMA ID COLON <type> <N2> 
<N2> -> eps 
<dataType> -> INTEGER 
<dataType> -> REAL 
<dataType> -> BOOLEAN 
<dataType> -> ARRAY SQBO <range_arrays> SQBC OF <type> 
<type> -> INTEGER 
<type> -> REAL 
<type> -> BOOLEAN 
<statements> -> <statement> <statements> 
<statements> -> eps 
<statement> -> <ioStmt> 
<statement> -> <simpleStmt> 
<statement> -> <declareStmt> 
<statement> -> <conditionalStmt> 
<statement> -> <iterativeStmt> 
<ioStmt> -> GET_VALUE BO ID BC SEMICOL 
<ioStmt> ->  PRINT BO <var> BC SEMICOL 
<boolConstt> -> TRUE 
<boolConstt> -> FALSE 
<var_id_num> -> ID <whichId> 
<var_id_num> -> NUM 
<var_id_num> -> RNUM 
<var> -> <var_id_num> 
<var> -> <boolConstt 
<whichId> -> SQBO <index> SQBC 
<whichId> -> eps 
<simpleStmt> -> <assignmentStmt> 
<simpleStmt> -> <moduleReuseStmt> 
<assignmentStmt> -> ID <whichStmt> 
<whichStmt> -> <lvalueIDStmt> 
 <whichStmt> -> <lvalueARRStmt> 
<lvalueIDStmt> -> ASSIGNOP <expression> SEMICOL 
<lvalueARRStmt> -> SQBO <index> SQBC ASSIGNOP <expression> SEMICOL 
<index> -> NUM 
<index> -> ID 
<moduleReuseStmt> -> <optional> USE MODULE ID WITH PARAMETERS <idList> SEMICOL 
<optional> -> SQBO <idList> SQBC ASSIGNOP 
<optional> -> eps 
<idList> -> ID <N3> 
<N3> -> COMMA ID <N3> 
<N3> -> eps 
<U> -> <unary_op> <new_NT> 
<new_NT> -> BO <arithmeticExpr> BC 
<new_NT> -> <var_id_num> 
<unary_op> -> PLUS 
<unary_op> -> MINUS 
<arithmeticOrBooleanExpr> -> <AnyTerm> <N7> 
<N7> -> <logicalOp> <AnyTerm> <N7> 
<N7> -> eps 
<AnyTerm> -> <arithmeticExpr> <N8> 
<AnyTerm> -> <boolConstt>  
<N8> -> <relationalOp> <arithmeticExpr>  
<N8> -> eps 
<expression> -> <arithmeticOrBooleanExpr> 
<expression> -> <U> 
<arithmeticExpr> -> <term> <N4> 
<N4> -> <op1> <term> <N4> 
<N4> -> eps 
<term> -> <factor> <N5> 
<N5> -> <op2> <factor> <N5> 
<N5> -> eps 
<factor> -> BO <arithmeticOrBooleanExpr> BC 
<op1> -> PLUS 
<op1> -> MINUS 
<op2> -> MUL 
<op2> -> DIV 
<logicalOp> -> AND 
<logicalOp> -> OR 
<relationalOp> -> LT 
<relationalOp> -> LE 
<relationalOp> -> GT 
<relationalOp> -> GE 
<relationalOp> -> EQ 
<relationalOp> -> NE 
<declareStmt> -> DECLARE <idList> COLON <dataType> SEMICOL 
<conditionalStmt> -> SWITCH BO ID BC START <caseStmts> <default> END 
<caseStmts> -> CASE <value> COLON <statements> BREAK SEMICOL <N9> 
<N9> -> CASE <value> COLON <statements> BREAK SEMICOL <N9> 
<N9> -> eps 
<value> -> NUM 
<value> -> TRUE 
<value> -> FALSE 
<default> -> DEFAULT COLON <statements> BREAK SEMICOL 
<default> -> eps 
<iterativeStmt> -> FOR BO ID IN <range> BC START <statements> END 
<iterativeStmt> -> WHILE BO <arithmeticOrBooleanExpr> BC START <statements> END 
<range_arrays> -> <index> RANGEOP <index> 
<range> -> NUM RANGEOP NUM
<factor> -> <var_id_num>
